(()=>{var n={266:(n,e,t)=>{"use strict";t.d(e,{Z:()=>s});var r=t(690),o=t.n(r),a=t(488),i=t.n(a)()(o());i.push([n.id,":root {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n        Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n        'Segoe UI Symbol';\n}\n\nbody {\n    margin: 0;\n    position: relative;\n    min-height: 100vh;\n    background-color: rgba(23, 24, 110, 0.8);\n}\n\n.preGame {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    padding: 24px;\n    background-color: rgba(0, 0, 0, 0.7);\n    color: rgb(0, 119, 255);\n    animation-name: place;\n    animation-duration: 4s;\n    animation-iteration-count: infinite;\n}\n\n.header {\n    text-align: center;\n    background-color: white;\n    font-weight: bolder;\n    font-size: 3rem;\n}\n\n.container {\n    display: none;\n    min-height: 100vh;\n    flex-direction: column;\n    background-color: rgba(0, 0, 0, 0.192);\n}\n\n.gridHold {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    gap: 144px;\n}\n\n.grid {\n    display: grid;\n    height: 350px;\n    width: 350px;\n    grid: repeat(10, 1fr) / repeat(10, 1fr);\n    border: 1px solid black;\n}\n\n.grid1,\n.grid2 {\n    padding: 24px;\n    background-color: black;\n}\n\n.cells {\n    border: 1px solid black;\n    background-color: white;\n}\n\n.filled,\n.preview {\n    background-color: rgb(10, 10, 194);\n}\n\n.miss {\n    background-color: rgb(219, 68, 68);\n}\n\n.hit {\n    background-color: rgb(34, 221, 34);\n}\n\n.gameDone {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 48px;\n}\n\n.endResult {\n    color: black;\n    font-size: 4rem;\n    font-weight: bolder;\n    animation-name: win;\n    animation-duration: 4s;\n    animation-iteration-count: infinite;\n}\n\n.newGame {\n    width: 250px;\n    height: 100px;\n    border: none;\n    color: black;\n    font-weight: bold;\n    font-size: 2rem;\n    background-color: white;\n    border: 2px solid black;\n    border-radius: 12px;\n}\n\n.newGame:active {\n    transform: translate(0.95);\n}\n\n#bot > .target:hover {\n    background-color: rgba(255, 255, 255, 0.4);\n    cursor: crosshair;\n}\n\n@keyframes place {\n    0% {\n        color: rgb(0, 119, 255);\n    }\n\n    25% {\n        color: rgb(0, 255, 85);\n    }\n\n    50% {\n        color: rgb(0, 255, 242);\n    }\n\n    75% {\n        color: rgb(255, 51, 0);\n    }\n\n    100% {\n        color: rgb(0, 119, 255);\n    }\n}\n\n@keyframes win {\n    0% {\n        color: rgb(123, 255, 0);\n    }\n\n    25% {\n        color: rgb(238, 255, 0);\n    }\n\n    50% {\n        color: rgb(255, 72, 0);\n    }\n\n    75% {\n        color: rgb(225, 0, 255);\n    }\n\n    100% {\n        color: rgb(0, 255, 0);\n    }\n}\n\n@media screen and (max-width: 950px) {\n    .gridHold {\n        flex-direction: column;\n    }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI;;yBAEqB;AACzB;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,iBAAiB;IACjB,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,kBAAkB;IAClB,aAAa;IACb,oCAAoC;IACpC,uBAAuB;IACvB,qBAAqB;IACrB,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,sBAAsB;IACtB,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,OAAO;IACP,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,aAAa;IACb,YAAY;IACZ,uCAAuC;IACvC,uBAAuB;AAC3B;;AAEA;;IAEI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;;IAEI,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,uBAAuB;IACvB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,0CAA0C;IAC1C,iBAAiB;AACrB;;AAEA;IACI;QACI,uBAAuB;IAC3B;;IAEA;QACI,sBAAsB;IAC1B;;IAEA;QACI,uBAAuB;IAC3B;;IAEA;QACI,sBAAsB;IAC1B;;IAEA;QACI,uBAAuB;IAC3B;AACJ;;AAEA;IACI;QACI,uBAAuB;IAC3B;;IAEA;QACI,uBAAuB;IAC3B;;IAEA;QACI,sBAAsB;IAC1B;;IAEA;QACI,uBAAuB;IAC3B;;IAEA;QACI,qBAAqB;IACzB;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ",sourcesContent:[":root {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n        Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n        'Segoe UI Symbol';\n}\n\nbody {\n    margin: 0;\n    position: relative;\n    min-height: 100vh;\n    background-color: rgba(23, 24, 110, 0.8);\n}\n\n.preGame {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    padding: 24px;\n    background-color: rgba(0, 0, 0, 0.7);\n    color: rgb(0, 119, 255);\n    animation-name: place;\n    animation-duration: 4s;\n    animation-iteration-count: infinite;\n}\n\n.header {\n    text-align: center;\n    background-color: white;\n    font-weight: bolder;\n    font-size: 3rem;\n}\n\n.container {\n    display: none;\n    min-height: 100vh;\n    flex-direction: column;\n    background-color: rgba(0, 0, 0, 0.192);\n}\n\n.gridHold {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    gap: 144px;\n}\n\n.grid {\n    display: grid;\n    height: 350px;\n    width: 350px;\n    grid: repeat(10, 1fr) / repeat(10, 1fr);\n    border: 1px solid black;\n}\n\n.grid1,\n.grid2 {\n    padding: 24px;\n    background-color: black;\n}\n\n.cells {\n    border: 1px solid black;\n    background-color: white;\n}\n\n.filled,\n.preview {\n    background-color: rgb(10, 10, 194);\n}\n\n.miss {\n    background-color: rgb(219, 68, 68);\n}\n\n.hit {\n    background-color: rgb(34, 221, 34);\n}\n\n.gameDone {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 48px;\n}\n\n.endResult {\n    color: black;\n    font-size: 4rem;\n    font-weight: bolder;\n    animation-name: win;\n    animation-duration: 4s;\n    animation-iteration-count: infinite;\n}\n\n.newGame {\n    width: 250px;\n    height: 100px;\n    border: none;\n    color: black;\n    font-weight: bold;\n    font-size: 2rem;\n    background-color: white;\n    border: 2px solid black;\n    border-radius: 12px;\n}\n\n.newGame:active {\n    transform: translate(0.95);\n}\n\n#bot > .target:hover {\n    background-color: rgba(255, 255, 255, 0.4);\n    cursor: crosshair;\n}\n\n@keyframes place {\n    0% {\n        color: rgb(0, 119, 255);\n    }\n\n    25% {\n        color: rgb(0, 255, 85);\n    }\n\n    50% {\n        color: rgb(0, 255, 242);\n    }\n\n    75% {\n        color: rgb(255, 51, 0);\n    }\n\n    100% {\n        color: rgb(0, 119, 255);\n    }\n}\n\n@keyframes win {\n    0% {\n        color: rgb(123, 255, 0);\n    }\n\n    25% {\n        color: rgb(238, 255, 0);\n    }\n\n    50% {\n        color: rgb(255, 72, 0);\n    }\n\n    75% {\n        color: rgb(225, 0, 255);\n    }\n\n    100% {\n        color: rgb(0, 255, 0);\n    }\n}\n\n@media screen and (max-width: 950px) {\n    .gridHold {\n        flex-direction: column;\n    }\n}\n"],sourceRoot:""}]);const s=i},488:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},690:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},590:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),l=0;l<a.length;l++){var A=t(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},804:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},980:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},98:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},937:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},776:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},885:n=>{n.exports={gridDisplay:function(n,e){const t=document.createElement("div");t.id=`${e}`,t.classList.add("grid");for(let r=0;r<n.board.length;r++)for(let o=0;o<n.board[r].length;o++){const a=document.createElement("div");a.className="cells",a.setAttribute("data-cell",`${r}${o}`),"bot"!==e?null===n.board[r][o]?(a.classList.remove("filled","miss","hit"),a.classList.add("empty")):"X"==n.board[r][o]?(a.classList.remove("empty","filled","hit"),a.classList.add("miss")):"Y"==n.board[r][o]?(a.classList.remove("empty","filled","miss"),a.classList.add("hit")):(a.classList.remove("empty","miss","hit"),a.classList.add("filled")):"bot"===e&&("X"==n.board[r][o]?(a.classList.remove("hit","target"),a.classList.add("miss")):"Y"==n.board[r][o]?(a.classList.remove("miss","target"),a.classList.add("hit")):a.classList.add("target")),t.append(a)}"p1place"==e?document.querySelector(".grid0").append(t):"p1"==e?document.querySelector(".grid1").append(t):"bot"==e&&document.querySelector(".grid2").append(t)},site:function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("p"),r=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div");n.classList.add("container"),e.classList.add("header"),r.classList.add("gridHold"),o.classList.add("grid1"),a.classList.add("grid2"),t.innerHTML="Welcome to Battleship",e.append(t),r.append(o,a),n.append(e,r),document.body.append(n)},setShip:function(){const n=document.createElement("div"),e=document.createElement("h1"),t=document.createElement("div"),r=document.createElement("div");n.classList.add("preGame"),e.classList.add("gameTitle"),t.classList.add("preGrid"),r.classList.add("grid0"),e.innerHTML="Place Your Ships",t.append(r),n.append(e,t),document.body.append(n)},gameOver:function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("button");n.classList.add("gameDone"),e.classList.add("endResult"),t.classList.add("newGame"),t.innerHTML="Restart",n.append(e,t),document.body.append(n)}}},425:n=>{n.exports={gameBoard:()=>{let n=[],e=[];for(let n=0;n<10;n++){let n=[];n=Array(10).fill(null),e.push(n)}return{board:e,shipList:n,place:function(e,t,r){let o=e.stats[0].big;if(!0!==function(n,e,t,r){result=!0;let o=t<1?0:t-1,a=r<1?0:r-1,i=t+2,s=r+e+1,c=[...Array(10).keys()].slice(o,i),l=[...Array(11).keys()].slice(a,s);for(let e=0;e<c.length;e++)for(let t=0;t<l.length;t++){if(s>11){result=!1;break}if(null!==n[c[e]][l[t]]&&void 0!==n[c[e]][l[t]]){result=!1;break}}return result}(this.board,o,t,r))return!1;{let a=r+o+1>10?10:r+o;for(let e=r;e<a;e++)this.board[t][e]=n.length;this.shipList.push(e)}},attack:function(n,e){let t=!0,r=this.board[n][e];return null!==r&&"X"!==r&&"Y"!==r?(this.shipList[r].hitStat(),this.board[n][e]="Y"):null===r?this.board[n][e]="X":"X"!==r&&"Y"!==r||(t=!1),t},sinkCheck:function(){let e=0,t=!1;for(let n=0;n<this.shipList.length;n++)1==this.shipList[n].sunken()&&(e+=1);return e===n.length&&(t=!0),t}}},ships:n=>{function e(){this.stats[0].hp-=1}function t(){if(0==this.stats[0].hp)return!0}return{a:{stats:[{boat:1,big:2,hp:2}],hitStat:e,sunken:t},b:{stats:[{boat:2,big:3,hp:3}],hitStat:e,sunken:t},c:{stats:[{boat:3,big:3,hp:3}],hitStat:e,sunken:t},d:{stats:[{boat:4,big:4,hp:4}],hitStat:e,sunken:t},e:{stats:[{boat:5,big:5,hp:5}],hitStat:e,sunken:t}}[n]}}},753:(n,e,t)=>{const{gameBoard:r,ships:o}=t(425),{gridDisplay:a}=t(885),i=(n,e)=>({name:n,turn:e}),s=i("player",1),c=i("comp",2);let l=r(),A=r(),d=1;function u(){const n=[],e=o("e"),t=o("d"),r=o("c"),a=o("b"),i=o("a");return n.push(e,t,r,a,i),n}function p(){let n=Math.floor(10*Math.random()),e=Math.floor(10*Math.random());0==l.attack(n,e)&&p(),d=1,document.querySelector(".grid1").innerHTML="",a(l,"p1"),m()}function m(){1==A.sinkCheck()?(document.querySelector(".container").style.display="none",document.querySelector(".gameDone").style.display="flex",document.querySelector(".endResult").textContent="Congratulations You Win"):1==l.sinkCheck()?(document.querySelector(".container").style.display="none",document.querySelector(".gameDone").style.display="flex",document.querySelector(".endResult").textContent="Game Over You Lose"):s.turn==d&&0==A.sinkCheck()?document.querySelector("#bot").addEventListener("click",(n=>{let e=n.target.getAttribute("data-cell").split("");!1!==A.attack(Number(e[0]),Number(e[1]))&&(document.querySelector(".grid2").innerHTML="",a(A,"bot"),d=2,m())})):c.turn==d&&0==l.sinkCheck()&&p()}n.exports={compBoard:function(){let n=u(),e=0;for(;e<5&&A.shipList.length<5;){let t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),o=t-n[e].stats[0].big+1<0?0:t-n[e].stats[0].big+1;!1!==A.place(n[e],r,o)&&e++}a(A,"bot")},shipPlace:function n(){let e=l.shipList.length,t=document.querySelector(".preGame"),r=u();var o,i;e<5?(a(l,"p1place"),o=e,i=r,document.querySelectorAll("#p1place > div ").forEach((function(n){n.addEventListener("mouseenter",(n=>{let e=i[o].stats[0].big;for(let t=0;t<e;t++){let r=n.target.getAttribute("data-cell").split("");Number(r[1])+e<=10&&document.querySelector(`[data-cell="${r[0]}${Number(r[1])+t}"]`).classList.add("preview")}}))})),document.querySelector("#p1place").addEventListener("mouseout",(()=>{document.querySelectorAll("[data-cell]").forEach((function(n){n.classList.remove("preview")}))})),function(e,t){document.querySelector("#p1place").addEventListener("click",(r=>{let o=r.target.getAttribute("data-cell").split("");!1!==l.place(t[e],Number(o[0]),Number(o[1]))&&(document.querySelector(".grid0").innerHTML="",n())}))}(e,r)):(t.parentNode.removeChild(t),a(l,"p1"),document.querySelector(".container").style.display="flex",m())},playerGrid:l,compGrid:A,restart:function(){l=r(),A=r(),d=1}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";var n=t(590),e=t.n(n),r=t(937),o=t.n(r),a=t(804),i=t.n(a),s=t(98),c=t.n(s),l=t(980),A=t.n(l),d=t(776),u=t.n(d),p=t(266),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const{site:g,setShip:b,gameOver:f}=t(885),{compBoard:C,shipPlace:h,restart:B}=t(753);!function n(){b(),h(),g(),C(),f(),document.querySelector(".newGame").addEventListener("click",(function(){document.body.innerHTML="",B(),n()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,